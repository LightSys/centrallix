== OVERVIEW ==

This test suite uses test_obj to run SQL queries or other test_obj commands
and compares the output against "correct" output.  The test suite detects
crashes, failures, and lockups.  This test suite does not currently measure
and evaluate performance.


== RUNNING THE TEST SUITE ==

Use "make test" to run the test suite.

You can tell the test suite to only run a subset of the tests by setting
the $TONLY environment variable to the category in question.  For example,

    $ export TONLY=00baseline
    $ make test

The test_00baseline_NN tests only validate that the test suite itself is
operating correctly.  The tests in this category will pass, fail, crash, and
lockup, just to ensure that the test suite is correctly reporting the test
results.


== UNDERSTANDING TEST SUITE OUTPUT ==

The output is colorized for easy reading on terminals that support color.

When a test passes, the name of the test and a green "PASS" indication will
display.  If a test fails, a red "FAIL", "CRASH", or "LOCKUP" indication will
display.  If a test fails because the output did not match the expected
output, "FAIL" is displayed and is preceded by a unified diff of the expected
output in comparison to the actual output.  This context diff will be in dark
red.

Any incidental output from the test_obj program is printed in dark blue,
immediately preceding the test name.  The presence of such output does not
mean a test has failed.  For example, the division expression operation test
intentionally tries to divide by zero, which is supposed to generate error
messages accordingly.  Those error messages will display in dark blue, as
opposed to an output mismatch in dark red.


== CREATING TEST SUITE ENTRIES ==

Each test suite item should have two files:

    tests/test_{category}_NN.to   -   test_obj command script
    tests/test_{category}_NN.cmp  -   "correct" output

The *.cmp file can be copied from the *.out file that is generated by
running a test without a *.cmp file, but be sure the *.out file is correct!!

The description of the test should be contained in the .to file itself, in a
line prefixed by "##NAME ".  For example,

    ##NAME just testing...
    query select one = 0

If the test modifies a file in the objectsystem, the modifications can be
automatically undone post-test by including an "##UNDO " tag inside the script:

    ##NAME an update test
    ##UNDO /tests/updatetest.csv
    query update /tests/updatetest.csv/rows set :value = 1

As you develop new test suite entires to cover new or existing functionality,
see the discussion above about the $TONLY environment variable, as well, to
help streamline your development.

