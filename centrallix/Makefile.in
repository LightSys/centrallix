####  Centrallix Makefile
####
####  Copyright (C) 1998-2014 by LightSys Technology Services, Inc.
####
####  FREE SOFTWARE, NO WARRANTY: This program is Free Software, licensed
####  under version 2 of the GNU General Public License, or any later
####  version of the GNU GPL published by the Free Software Foundation, at
####  your option.  This program is provided AS-IS and with ABSOLUTELY NO
####  WARRANTY.  See the file 'COPYING' provided with this software for
####  more information about the rights granted to you under this license.
####
####  If you're in this file looking for how to add a new objectsystem
####  driver to the build, add its .o file to the XOBJECTSYSTEM variable's
####  file list, below.  Don't forget to call the driver's initialization
####  function from lsmain.c and test_obj.c at appropriate places!!  And,
####  don't forget to add the content-type information to types.cfg.
####
####  Please do not modify 'Makefile'.  Only make changes to 'Makefile.in'
####  and then re-run the configure script.
####

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
top_builddir = .

cxosdir = @CXOSDIR@
builddir = @BUILDDIR@


EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AWK = @AWK@
CC = @CC@
STRIP = @STRIP@
SED = @SED@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_DATA = @INSTALL_DATA@
GZIP = @GZIP@

# VPATH - all the directories we manage.
VPATH=objectsystem:osdrivers:utility:multiquery:htmlgen:netdrivers:include:report:testsuite:expression:etc:wgtr:cxss:man:tests:application

# Support modules -- only basic utilities.
#XBASIC=mtask.o mtlexer.o xarray.o xhash.o xstring.o mtsession.o newmalloc.o xhashqueue.o stparse.o
#BASIC=$(patsubst %,utility/%,$(XBASIC))

# Support modules -- basic and advanced utilities.
XSUPPORT=stparse.o \
	 st_node.o \
	 htmlparse.o \
	 hints.o \
	 mergesort.o \
	 mime/mime_parse.o \
	 mime/mime_address.o \
	 mime/mime_encode.o \
	 mime/mime_util.o \
	 ptod.o	\
	 param.o \
	 iface.o \
	 endorsement_utils.o \
	 obfuscate.o \
	 json_util.o

SUPPORT=$(patsubst %,utility/%,$(XSUPPORT))

# App Management Layer (AML)
XAPPLAYER=app_main.o

APPLAYER=$(patsubst %,application/%,$(XAPPLAYER))

# OSML modules that implement the OSML API for internal C use
XOBJECTSYSTEM=obj_main.o \
	      obj_session.o \
	      obj_object.o \
	      obj_attr.o \
	      obj_query.o \
	      obj_method.o \
	      obj_content.o \
	      obj_params.o \
	      obj_trx.o \
	      obj_inherit.o \
	      obj_datatypes.o \
	      obj_rootnode.o \
	      obj_replica.o \
	      obj_temp.o

OBJECTSYSTEM=$(patsubst %,objectsystem/%,$(XOBJECTSYSTEM))

# Objectsystem drivers.
XOBJDRIVERS=objdrv_ux.o \
	    objdrv_unixuser.o \
	    objdrv_struct.o \
	    objdrv_report.o \
	    objdrv_uxprint.o \
	    objdrv_qytree.o \
	    objdrv_qypivot.o \
	    objdrv_datafile.o \
	    objdrv_audio.o \
	    objdrv_link.o \
	    @OBJDRIVERS@
OBJDRIVERS=$(patsubst %,osdrivers/%,$(XOBJDRIVERS))

XOBJDRIVERMODULES=@OBJDRIVERMODULES@
OBJDRIVERMODULES=$(patsubst %,osdrivers/%,$(XOBJDRIVERMODULES))

XV3OBJDRIVERS= \
	      objdrv_sysinfo.o \
	      objdrv_ux.o \
	      objdrv_unixuser.o \
	      objdrv_struct.o \
	      objdrv_report_v3.o \
	      objdrv_uxprint_v3.o \
	      objdrv_qytree.o \
	      objdrv_qypivot.o \
	      objdrv_query.o \
	      objdrv_datafile.o \
	      objdrv_audio.o \
	      objdrv_link.o \
	      objdrv_json.o \
	      @OBJDRIVERS@
V3OBJDRIVERS=$(patsubst %,osdrivers/%,$(XV3OBJDRIVERS))

# WGTR system, including wgt drivers and main wgtr code
XWGTRDRIVERS=wgtdrv_alerter.o \
	wgtdrv_autolayout.o \
	wgtdrv_button.o \
	wgtdrv_calendar.o \
	wgtdrv_chart.o \
	wgtdrv_checkbox.o \
	wgtdrv_clock.o \
	wgtdrv_component.o \
	wgtdrv_componentdecl.o \
	wgtdrv_connector.o \
	wgtdrv_datetime.o \
	wgtdrv_dropdown.o \
	wgtdrv_editbox.o \
	wgtdrv_execmethod.o \
	wgtdrv_formbar.o \
	wgtdrv_form.o \
	wgtdrv_formstatus.o \
	wgtdrv_frameset.o \
	wgtdrv_fileupload.o \
	wgtdrv_hints.o \
	wgtdrv_html.o \
	wgtdrv_imagebutton.o \
	wgtdrv_image.o \
	wgtdrv_label.o \
	wgtdrv_map.o \
	wgtdrv_menu.o \
	wgtdrv_multiscroll.o \
	wgtdrv_objcanvas.o \
	wgtdrv_osrc.o \
	wgtdrv_page.o \
	wgtdrv_pane.o \
	wgtdrv_parameter.o \
	wgtdrv_radiobutton.o \
	wgtdrv_repeat.o \
	wgtdrv_rule.o \
	wgtdrv_scrollbar.o \
	wgtdrv_scrollpane.o \
	wgtdrv_spinner.o \
	wgtdrv_sys_osml.o \
	wgtdrv_tab.o \
	wgtdrv_table.o \
	wgtdrv_template.o \
	wgtdrv_terminal.o \
	wgtdrv_textarea.o \
	wgtdrv_textbutton.o \
	wgtdrv_timer.o \
	wgtdrv_treeview.o \
	wgtdrv_variable.o \
	wgtdrv_window.o \
	wgtdrv_uawindow.o \
	wgtr.o \
	apos.o

WGTRDRIVERS=$(patsubst %,wgtr/%,$(XWGTRDRIVERS))

# DHTML generation subsystem, including drivers and the ht_render main system.
XHTDRIVERS=htdrv_page.o \
	   htdrv_scrollpane.o \
	   htdrv_treeview.o \
	   htdrv_html.o \
	   htdrv_connector.o \
	   htdrv_button.o \
	   htdrv_imagebutton.o \
	   htdrv_textbutton.o \
	   htdrv_menu.o \
	   htdrv_frameset.o \
	   ht_render.o \
	   htdrv_variable.o \
	   htdrv_tab.o \
	   htdrv_pane.o \
	   htdrv_table.o \
	   htdrv_chart.o \
	   htdrv_window.o \
	   htdrv_uawindow.o \
	   htdrv_checkbox.o \
	   htdrv_radiobutton.o \
	   htdrv_editbox.o \
	   htdrv_timer.o \
	   htdrv_execmethod.o \
	   htdrv_form.o \
	   htdrv_formstatus.o \
	   htdrv_fileupload.o \
	   htdrv_alerter.o \
	   htdrv_osrc.o \
	   htdrv_spinner.o \
	   htdrv_dropdown.o \
	   htdrv_datetime.o \
	   htdrv_label.o \
	   htdrv_textarea.o \
	   htdrv_clock.o \
	   htdrv_terminal.o \
	   htdrv_calendar.o \
	   htdrv_scrollbar.o \
	   htdrv_componentdecl.o \
	   htdrv_component.o \
	   htdrv_image.o \
	   htdrv_hints.o \
	   htdrv_formbar.o \
	   htdrv_objcanvas.o \
	   htdrv_map.o \
	   htdrv_parameter.o \
	   htdrv_autolayout.o \
	   htdrv_repeat.o \
	   htdrv_multiscroll.o \
	   htdrv_rule.o \

HTDRIVERS=$(patsubst %,htmlgen/%,$(XHTDRIVERS)) \
	   utility/iface_html.o

# Multiquery subsystem, SQL parser, and query drivers.
XQYDRIVERS=multiq_tablegen.o \
	   multiq_projection.o \
	   multiq_equijoin.o \
	   multiq_insertselect.o \
	   multiq_update.o \
	   multiq_delete.o \
	   multiq_orderby.o \
	   multiq_upsert.o \
	   multiquery.o
QYDRIVERS=$(patsubst %,multiquery/%,$(XQYDRIVERS))

# Network drivers.
XNETDRIVERS=net_http.o \
	    net_http_conn.o \
	    net_http_sess.o \
	    net_http_osml.o \
	    net_http_app.o \
	    net_http_rest.o \
	    net_bdqs.o \
	    @NETDRIVERS@
NETDRIVERS=$(patsubst %,netdrivers/%,$(XNETDRIVERS))

XNETDRIVERMODULES=@NETDRIVERMODULES@
NETDRIVERMODULES=$(patsubst %,netdrivers/%,$(XNETDRIVERMODULES))

# Reporting subsystem, including printer drivers and print management system.
XRPTMODS=epsonfx_prt.o \
	 hppcl_prt.o \
	 html_prt.o \
	 barcode.o \
	 prtmgmt.o \
	 text_prt.o
RPTMODS=$(patsubst %,report/%,$(XRPTMODS))

# V3 reporting subsystem
XV3RPTMODS=prtmgmt_v3_api.o \
	   prtmgmt_v3_fm_csv.o \
	   prtmgmt_v3_fm_html.o \
	   prtmgmt_v3_fm_html_lm_col.o \
	   prtmgmt_v3_fm_html_lm_table.o \
	   prtmgmt_v3_fm_html_lm_text.o \
	   prtmgmt_v3_fm_strict.o \
	   prtmgmt_v3_graphics.o \
	   prtmgmt_v3_internal.o \
	   prtmgmt_v3_lm_page.o \
	   prtmgmt_v3_lm_text.o \
	   prtmgmt_v3_lm_col.o \
	   prtmgmt_v3_lm_table.o \
	   prtmgmt_v3_main.o \
	   prtmgmt_v3_od_pcl.o \
	   prtmgmt_v3_od_text.o \
	   prtmgmt_v3_od_ps.o \
	   prtmgmt_v3_od_epsonfx.o \
	   prtmgmt_v3_session.o
V3RPTMODS=$(patsubst %,report/%,$(XV3RPTMODS))

# Expression evaluation/compilation manager.
XEXPRMODS=exp_main.o \
	  exp_params.o \
	  exp_compiler.o \
	  exp_evaluate.o \
	  exp_functions.o \
	  exp_generator.o
EXPRMODS=$(patsubst %,expression/%,$(XEXPRMODS))

XCXSSMODS=cxss_main.o \
	  cxss_utility.o \
	  cxss_entropy.o \
	  cxss_contextstack.o \
	  cxss_tlshelper.o \
	  cxss_policy.o \
	  cxss_keystream.o \
	  cxss_util.o \
	  cxss_crypto.o \
	  cxss_credentials_db.o \
	  cxss_credentials_mgr.o

CXSSMODS=$(patsubst %,cxss/%,$(XCXSSMODS))

# Javascript VM modules... for Centrallix side of things.
XLSJSVM=jsvm_client.o
LSJSVM=$(patsubst %,jsvm/%,$(XLSJSVM))

# Javascript VM modules... runtime engine side of things.
XJSVM=jsvm_server.o
JSVM=$(patsubst %,jsvm/%,$(XJSVM))

# Test suite.
XTESTSUITE=ts1.c \
	   ts2.c \
	   ts3.c
TESTSUITE=$(patsubst %,testsuite/%,$(XTESTSUITE))

# Manual pages.
XMANPAGES=$(shell echo man/*.[0-9])
MANPAGES=$(patsubst %,%.gz,$(XMANPAGES))

# Loadable modules.
MODULES=$(OBJDRIVERMODULES) $(HTDRIVERMODULES) $(QYDRIVERMODULES) $(NETDRIVERMODULES)

# Configuration Files
CONFFILES=centrallix.conf \
   	  rootnode \
	  types.cfg \
	  useragent.cfg

# testobj-driven test files
TOTESTFILES:=$(wildcard tests/test_$(TONLY)*.to)

# Some basic build parameters.
PROFILE=@PROFILE@
COVERAGE=@COVERAGE@
BUILD=$(shell cat .build)
BLDFILE=$(shell if [ -f .ismaster ]; then echo ".build"; echo '1' >.subbuild; else echo ".subbuild"; if [ ! -e .subbuild ]; then echo '1' > .subbuild; fi; fi)
SUBBUILD=$(shell if [ ! -e .subbuild ]; then echo '1' > .subbuild; fi; cat .subbuild)
PREVBUILD=$(shell expr $(BUILD) - 1)
YEARS=$(shell YR=`date +%Y`; echo 1998-$$YR)
VERSION=$(shell cat .version)

# JSON-C library location
#JSONC=$(shell cd thirdparty; ls -d json-c-* | grep -v inst | tail -n 1)

CXLIBDIR=@CXLIBDIR@
CXINCDIR=@CXINCDIR@
#CFLAGS=$(PROFILE) -I./include -I. -I$(CXINCDIR) -Ithirdparty/$(JSONC)-inst/include/json-c @CFLAGS@ -DBUILD=$(BUILD) -DSUBBUILD=$(SUBBUILD) -DYEARS=\"$(YEARS)\" -DNHT_ENABLE -DDBMAGIC -DNM_USE_SYSMALLOC -DHAS_IOPUTC -DSTABILITY=\"DEVELOPMENT\" -DHAVE_CONFIG_H -Wall -Wno-implicit-function-declaration -g @STATIC_CFLAGS@
CFLAGS=$(PROFILE) $(COVERAGE) -I./include -I. -I$(CXINCDIR) @CFLAGS@ -DBUILD=$(BUILD) -DSUBBUILD=$(SUBBUILD) -DYEARS=\"$(YEARS)\" -DNHT_ENABLE -DDBMAGIC -DNM_USE_SYSMALLOC -DHAS_IOPUTC -DSTABILITY=\"DEVELOPMENT\" -DHAVE_CONFIG_H -Wall -Wno-implicit-function-declaration -g @STATIC_CFLAGS@

#LIBS=@LIBS@ @STATIC_LIBS@ thirdparty/$(JSONC)-inst/lib/libjson-c.a
#STATIC_LIBS=@STATIC_LIBS@ thirdparty/$(JSONC)-inst/lib/libjson-c.a
LIBS=@LIBS@ @STATIC_LIBS@
STATIC_LIBS=@STATIC_LIBS@

BASEOBJS=$(SUPPORT) $(EXPRMODS) $(OBJECTSYSTEM) $(OBJDRIVERS) $(QYDRIVERS) $(APPLAYER) $(RPTMODS) $(CXSSMODS)
LSOBJS=$(BASEOBJS) $(HTDRIVERS) $(NETDRIVERS) $(WGTRDRIVERS)
V3BASEOBJS=$(SUPPORT) $(EXPRMODS) $(OBJECTSYSTEM) $(V3OBJDRIVERS) $(QYDRIVERS) $(APPLAYER) $(V3RPTMODS) $(CXSSMODS)
V3LSOBJS=$(V3BASEOBJS) $(HTDRIVERS) $(NETDRIVERS) $(WGTRDRIVERS)

.PHONY:	modules
.PHONY:	modules_install
.PHONY:	mods
.PHONY:	depend
.PHONY: all
.PHONY: config
.PHONY: install
.PHONY: config_install
.PHONY: rhinit_install
.PHONY: clean distclean distreallyclean
.PHONY:	manpages
.PHONY:	manpages_install
.PHONY:	test_install
.PHONY:	test

all:	centrallix mods config manpages cxpasswd test_obj

centrallix.o: $(V3LSOBJS) centrallix.c

centrallix: .build .subbuild lsmain.o centrallix.o $(V3LSOBJS) $(STATIC_LIBS)
	@echo ''
	@echo "Linking Build #"`cat .build`"-"`cat .subbuild`
	@echo
	$(CC) centrallix.o lsmain.o $(V3LSOBJS) $(LIBDIRS) $(LIBS) $(PROFILE) $(COVERAGE) -Wl@EXPORT_DYNAMIC@ -o centrallix
	@sh -c 'BLD=`cat $(BLDFILE)`; BLD=`expr $$BLD + 1`; echo $$BLD > $(BLDFILE)'
	#@rm centrallix.o
	@echo ''

cxpasswd: cxpasswd.o centrallix.o $(STATIC_LIBS) $(V3LSOBJS)
	$(CC) cxpasswd.o centrallix.o $(V3LSOBJS) $(LIBDIRS) $(PROFILE) $(COVERAGE) -Wl@EXPORT_DYNAMIC@ -o cxpasswd $(LIBS)

install: all config_install modules_install manpages_install test_install
	@mkdir -p "$(sbindir)"
	@mkdir -p "$(sysconfdir)"
	@$(INSTALL) centrallix "$(sbindir)"
	@$(INSTALL) cxpasswd "$(sbindir)"

manpages: $(MANPAGES)

manpages_install: manpages
	@for MANPAGE in $(MANPAGES); do \
		SECTION=$${MANPAGE%.*}; \
		SECTION=$${SECTION##*.}; \
		mkdir -p $(mandir)/man$${SECTION}; \
		$(INSTALL) -m 664 $${MANPAGE} $(mandir)/man$${SECTION}; \
	done

# JSON-C library
#osdrivers/objdrv_json.o: thirdparty/$(JSONC)-inst/lib/libjson-c.a
#utility/json_util.o: thirdparty/$(JSONC)-inst/lib/libjson-c.a

thirdparty/$(JSONC)-inst/lib/libjson-c.a: thirdparty/$(JSONC)/Makefile
	@echo ""
	@echo "========================= Compiling libjson-c... ========================="
	@echo ""
	cd thirdparty/$(JSONC); make install
	@echo ""
	@echo "========================== libjson-c COMPLETED  =========================="
	@echo ""

thirdparty/$(JSONC)/Makefile.in: thirdparty/$(JSONC)/Makefile.am
	@echo ""
	@echo "========================= Autoconf libjson-c...  ========================="
	@echo ""
	cd thirdparty/$(JSONC); cp -a dist/* .; cp -a tests/dist/* tests/; if type autoreconf >/dev/null 2>/dev/null; then autoreconf -v --install; fi

#	if [ ! -f ltmain.sh ]; then cp -a dist/ltmain.sh ltmain.sh; fi

thirdparty/$(JSONC)/Makefile: thirdparty/$(JSONC)/Makefile.in
	@echo ""
	@echo "======================== Configuring libjson-c... ========================"
	@echo ""
	mkdir -p $$PWD/thirdparty/$(JSONC)-inst
	cd thirdparty/$(JSONC); ./configure --disable-shared --enable-static --prefix=$$PWD/../$(JSONC)-inst CFLAGS=-Wno-unused-but-set-variable

#cd thirdparty/$(JSONC); if type autoreconf >/dev/null 2>/dev/null; then ./autogen.sh --disable-shared --enable-static --prefix=$$PWD/../$(JSONC)-inst CFLAGS=-Wno-unused-but-set-variable; else cp -a dist/* .; cp -a tests/dist/* tests/; ./configure --disable-shared --enable-static --prefix=$$PWD/../$(JSONC)-inst CFLAGS=-Wno-unused-but-set-variable; fi

# You can call "make mods" directly to avoid getting the warning about
# make modules_install.  However, we recommend avoiding that habit if
# possible :)  make modules is the standard way to do it if you aren't
# going to install em immediately (otherwise, use make modules_install).
#
mods: $(MODULES)

modules: mods
	@echo "*** Be sure to do a 'make modules_install'"

modules_install: mods
	@mkdir -p $(libdir)/centrallix
	$(if $(strip ${MODULES}),@$(INSTALL) $(MODULES) $(libdir)/centrallix)
	@echo ""
	@echo "***************************************************************"
	@echo "Libraries have been installed in $(libdir)/centrallix"
	@echo ""
	@echo "Please ensure that $(libdir)/centrallix is in"
	@echo '$$LD_LIBRARY_PATH or added to /etc/ld.so.conf.'
	@echo "***************************************************************"
	@echo ""

config: etc/rootnode etc/centrallix.conf etc/centrallix.init

config_install: config
	@mkdir -p "${sysconfdir}/centrallix"
	@for CFILE in $(CONFFILES) ; do \
		if ! [ -a "$(sysconfdir)/centrallix/$${CFILE}" ] ; then \
			echo "Installing default version of $${CFILE}" ; \
			$(INSTALL) -m 644 "etc/$${CFILE}" "$(sysconfdir)/centrallix/$${CFILE}" ; \
		fi \
	done ; \
	if [ ! -a "$(sysconfdir)/centrallix.conf" ]; then \
	    mv "$(sysconfdir)/centrallix/centrallix.conf" "$(sysconfdir)/centrallix.conf" ; \
	fi

rhinit_install: config
	mkdir -p "$(sysconfdir)/rc.d/init.d"
	$(INSTALL) -m 744 etc/centrallix.init "$(sysconfdir)/rc.d/init.d/centrallix"

test_install: test_obj test_prt
	mkdir -p "$(bindir)"
	$(INSTALL) -m 755 test_obj "$(bindir)"
	$(INSTALL) -m 755 test_prt "$(bindir)"
	$(INSTALL) -m 644 tests/cxpasswd-test "$(sysconfdir)/centrallix/cxpasswd-test"

tests/centrallix.conf-test: tests/centrallix.conf-test.in
	@SYSCONFDIR=$(sysconfdir); \
	RUNSYSCONFDIR=$${SYSCONFDIR#$(builddir)}; \
	LIBDIR=$(libdir); \
	RUNLIBDIR=$${LIBDIR#$(builddir)}; \
	$(SED) -e "s|##SYSCONFDIR##|$$RUNSYSCONFDIR|g" -e "s|##LIBDIR##|$$RUNLIBDIR|g" -e "s|##LOGMETHOD##|@LOGMETHOD@|g" tests/centrallix.conf-test.in > tests/centrallix.conf-test


test: tests/centrallix.conf-test test_install $(TOTESTFILES)
	@printf "%-62.62s  %s\n" "Test Name" "Stat"
	@printf "%-62.62s  %s\n" "----------------------------------------------------------------" "--------------"
	@for TOFILE in $$(ls $(TOTESTFILES) ); do \
	    if [ "$$TONLY" = "" -o "$${TOFILE#tests/test_$$TONLY}" != "$$TOFILE" ]; then \
		CXOS=$$(sed -n 's/^[ 	]*path *= *"\([^"]*\).*/\1/p' < "$(sysconfdir)/centrallix/rootnode"); \
	    	TOBASE="$${TOFILE%.to}"; \
		TONAME=$$(sed -n 's/^##NAME //p' < $$TOBASE.to); \
		TOUNDO=$$(sed -n 's/^##UNDO //p' < $$TOBASE.to); \
		TOUNDOBAK="$${TOUNDO}-$$RANDOM-$$RANDOM"; \
		TOSIMPLE="$${TOBASE#tests/test_}"; \
		CBLUE=$$(/usr/bin/tput setaf 4); \
		CRED=$$(/usr/bin/tput setaf 1); \
		CGREEN=$$(/usr/bin/tput setaf 2); \
		CBOLD=$$(/usr/bin/tput bold); \
		CNORM=$$(/usr/bin/tput sgr0); \
		/bin/rm -f "$$PWD/$$TOBASE.out"; \
		[ -f "$$CXOS/$$TOUNDO" ] && /bin/cp -a "$$CXOS/$$TOUNDO" "$$CXOS/$$TOUNDOBAK"; \
		echo -n "$$CBLUE"; \
	    	"$(bindir)/test_obj" -q -c tests/centrallix.conf-test -u cxtest -p cxtestpass -f "$$PWD/$$TOBASE.to" -o "$$PWD/$$TOBASE.out" -i 4 2>&1 | grep -v 'Notice: Max thread count reduced from' | sed 's/^/    /'; \
		RET="$${PIPESTATUS[0]}"; \
		[ -f "$$CXOS/$$TOUNDOBAK" ] && /bin/mv -f "$$CXOS/$$TOUNDOBAK" "$$CXOS/$$TOUNDO"; \
		if [ "$$RET" -eq 142 ]; then \
		    printf "$$CNORM%-62.62s  %s\n" "$$TOSIMPLE $$TONAME" "$$CRED$${CBOLD}LOCKUP$$CNORM"; \
		elif [ "$$RET" -gt 120 ]; then \
		    printf "$$CNORM%-62.62s  %s\n" "$$TOSIMPLE $$TONAME" "$$CRED$${CBOLD}CRASH$$CNORM"; \
		elif cmp -s "$$TOBASE.out" "$$TOBASE.cmp"; then \
		    printf "$$CNORM%-62.62s  %s\n" "$$TOSIMPLE $$TONAME" "$$CGREEN$${CBOLD}Pass$$CNORM"; \
		    /bin/rm -f "$$PWD/$$TOBASE.out"; \
		else \
		    echo -n "$$CRED"; \
		    diff --label EXPECTED -U0 -N "$$TOBASE.cmp" "$$TOBASE.out" | sed 's/^/    /'; \
		    printf "$$CNORM%-62.62s  %s\n" "$$TOSIMPLE $$TONAME" "$$CRED$${CBOLD}FAIL$$CNORM"; \
		fi; \
	    fi \
	done 

sfeditor/sfedit.o: sfeditor/sfedit.c sfeditor/*.xpm
	$(CC) $(CFLAGS) `gtk-config --cflags` $< -c -o $@

sfedit: sfeditor/sfedit.o $(V3LSOBJS)
	$(CC) sfeditor/sfedit.o centrallix.o $(V3LSOBJS) $(LIBDIRS) $(PROFILE) $(COVERAGE) -o sfedit $(LIBS) `gtk-config --libs`

clog: clog_src/clog.o $(EXPRMODS) $(SUPPORT) $(OBJECTSYSTEM)
	$(CC) clog_src/clog.o $(EXPRMODS) $(SUPPORT) $(OBJECTSYSTEM) $(LIBDIRS) $(PROFILE) $(COVERAGE) -o clog $(LIBS)

.c.so:	$<
	$(CC) $(CFLAGS) -DMODULE -Wno-unused $(PROFILE) $(COVERAGE) -shared -fPIC $< -o $@

%.gz:	%
	$(GZIP) -9 < $< > $@

jsengine: $(JSVM)
	$(CC) $(JSVM) $(LIBDIRS) $(PROFILE) $(COVERAGE) -o jsvm

test_obj: test_obj.o centrallix.o $(V3LSOBJS) $(STATIC_LIBS)
	$(CC) centrallix.o test_obj.o $(V3LSOBJS) $(LIBDIRS) $(PROFILE) $(COVERAGE) -Wl@EXPORT_DYNAMIC@ -o test_obj $(LIBS)

test_prt: test_prt.o centrallix.o $(V3LSOBJS) $(STATIC_LIBS)
	$(CC) centrallix.o test_prt.o $(V3LSOBJS) $(LIBDIRS) $(PROFILE) $(COVERAGE) -Wl@EXPORT_DYNAMIC@ -o test_prt $(LIBS)

#test_prt: test_prt.o $(SUPPORT) $(EXPRMODS) $(OBJECTSYSTEM) $(V3OBJDRIVERS) $(QYDRIVERS) $(APPLAYER) $(V3RPTMODS) $(CXSSMODS)
#	$(CC) test_prt.o $(SUPPORT) $(EXPRMODS) $(OBJECTSYSTEM) $(V3OBJDRIVERS) $(QYDRIVERS) $(APPLAYER) $(V3RPTMODS) $(CXSSMODS) $(LIBDIRS) $(PROFILE) $(COVERAGE) -o test_prt $(LIBS)

ts: ts.o $(LSOBJS) $(TESTSUITE)
	$(CC) ts.o $(LSOBJS) $(TESTSUITE) $(LIBDIRS) $(PROFILE) $(COVERAGE) -o ts $(LIBS)

lsclient: lsclient.o $(BASIC)
	$(CC) lsclient.o $(BASIC) $(PROFILE) $(COVERAGE) -o lsclient

htmltest: htmltest.o $(SUPPORT)
	$(CC) htmltest.o $(SUPPORT) $(PROFILE) $(COVERAGE) -o htmltest

etc/rootnode: etc/rootnode.in
	@CXOSDIR=$(cxosdir); \
	RUNCXOSDIR=$${CXOSDIR#$(builddir)}; \
	$(SED) -e "s|##OSDIR##|$$RUNCXOSDIR|g" etc/rootnode.in > etc/rootnode

etc/centrallix.conf: etc/centrallix.conf.mk
	@SYSCONFDIR=$(sysconfdir); \
	RUNSYSCONFDIR=$${SYSCONFDIR#$(builddir)}; \
	LIBDIR=$(libdir); \
	RUNLIBDIR=$${LIBDIR#$(builddir)}; \
	$(SED) -e "s|##SYSCONFDIR##|$$RUNSYSCONFDIR|g" -e "s|##LIBDIR##|$$RUNLIBDIR|g" -e "s|##LOGMETHOD##|@LOGMETHOD@|g" etc/centrallix.conf.mk > etc/centrallix.conf

etc/centrallix.init: etc/centrallix.init.in
	@SYSCONFDIR=$(sysconfdir); \
	RUNSYSCONFDIR=$${SYSCONFDIR#$(builddir)}; \
	LIBDIR=$(libdir); \
	RUNLIBDIR=$${LIBDIR#$(builddir)}; \
	SBINDIR=$(sbindir); \
	RUNSBINDIR=$${SBINDIR#$(builddir)}; \
	CXLIBDIR=$(cxlibdir); \
	RUNCXLIBDIR=$${CXLIBDIR#$(builddir)}; \
	LOCALSTATEDIR=$(localstatedir); \
	RUNLOCALSTATEDIR=$${LOCALSTATEDIR#$(builddir)}; \
	$(SED) -e "s|##SBINDIR##|$$RUNSBINDIR|g" -e "s|##SYSCONFDIR##|$$RUNSYSCONFDIR|g" -e "s|##LOCALSTATEDIR##|$$RUNLOCALSTATEDIR|g" -e "s|##LIBDIR##|$$RUNLIBDIR|g" -e "s|##CXLIBDIR##|$$RUNCXLIBDIR|g" etc/centrallix.init.in > etc/centrallix.init

clean:
	@rm -f */*.o
	@rm -f */*.so
	@rm -f centrallix test_obj lsclient sfedit test_prt
	@rm -f *.o
	@rm -f etc/centrallix.conf etc/rootnode
	@rm -f etc/centrallix.init
	@rm -f man/*.gz
	@rm -f tests/*.to.tmp tests/*.out
	@rm -rf thirdparty/*-inst
	@rm -f *.gcov */*.gcov
	@rm -f *.gcda */*.gcda
	@rm -f *.gcno */*.gcno

distclean: clean
	@rm -f config.status config.cache config.log
	@rm -rf autom4te-*.cache/
	@rm -f config.h
	@rm -f Makefile stamp-h
	@rm -f .depend
	@rm -f thirdparty/*/Makefile

distreallyclean: distclean
	@rm -f configure
	@rm -f config.h.in
	@rm -f install-sh

depend:	.depend

.depend: *.[ch] */*.[ch] */*/*.[ch] @CXINCDIR@/cxlib/*.h
	@echo "Rebuilding dependencies..."
	@makedepend -o.o -Yinclude -I . -I @CXINCDIR@ -f - *.c */*.c */*/*.c >.depend 2>/dev/null
	@makedepend -o.so -Yinclude -I . -I @CXINCDIR@ -f - *.c */*.c */*/*.c >>.depend 2>/dev/null

.subbuild:
	@echo '1' >.subbuild

backup:
	@/bin/echo -n Creating a backup of $(VERSION).$(PREVBUILD) "... "
	@mkdir VER/$(VERSION).$(PREVBUILD) 2>/dev/null; exit 0
	@cp -r htmlgen include lsmain.c lsclient.c test_obj.c Makefile multiquery netdrivers objectsystem osdrivers report utility expression VER/$(VERSION).$(PREVBUILD)
	@echo "done."

# You will need to add an entry to know how to compile your objdrv file.  You
# will probably also want to add checks to configure.ac and aclocal.m4 for
# this new module.
osdrivers/objdrv_mysql.so: osdrivers/objdrv_mysql.c
	$(CC) $(CFLAGS) @MYSQL_CFLAGS@ -DMODULE -Wno-unused -shared -fPIC $< @MYSQL_LIBS@ -o $@

osdrivers/objdrv_sybase.so: osdrivers/objdrv_sybase.c
	$(CC) $(CFLAGS) @SYBASE_CFLAGS@ -DMODULE -Wno-unused -shared -fPIC $< @SYBASE_LIBS@ -o $@

osdrivers/objdrv_xml.so: osdrivers/objdrv_xml.c
	$(CC) $(CFLAGS) @XML_CFLAGS@ -DMODULE -Wno-unused -shared -fPIC $< @XML_LIBS@ -o $@

osdrivers/objdrv_gzip.so: osdrivers/objdrv_gzip.c
	$(CC) $(CFLAGS) @GZIP_CFLAGS@ -DMODULE -Wno-unused -shared -fPIC $< @GZIP_LIBS@ -o $@

osdrivers/objdrv_berk.so: osdrivers/objdrv_berk.c
	$(CC) $(CFLAGS) -ldb -DMODULE -Wno-unused -shared -fPIC $< -o $@

#osdrivers/objdrv_snmp.so: osdrivers/objdrv_snmp.c
#	$(CC) $(CFLAGS) @SNMP_CFLAGS@ -DMODULE -Wno-unused -shared -fPIC $< @SNMP_LIBS@ -o $@

netdrivers/net_ldap.so: netdrivers/net_ldap.c
	$(CC) $(CFLAGS) @NETLDAP_CFLAGS@ -DMODULE -Wno-unused -shared -fPIC $< @NETLDAP_LIBS@ -o $@

%.so: %.c
	$(CC) $(CFLAGS) -DMODULE -Wno-unused -shared -fPIC $< -o $@
	
# Dependencies made by "make depend"
include .depend

